<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Title>ByteSize</Title>
    <Description>ByteSize is a utility class that makes byte size representation in code easier by removing ambiguity of the value being represented. ByteSize is to bytes what System.TimeSpan is to time.</Description>
    <Copyright>Copyright © Omar Khudeira 2013-2020</Copyright>
    <AssemblyTitle>ByteSize</AssemblyTitle>
    <Authors>Omar Khudeira</Authors>
    <TargetFrameworks>net5.0;netstandard2.1;netstandard2.0;net45</TargetFrameworks>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <AssemblyName>ByteSize</AssemblyName>
    <PackageId>ByteSize</PackageId>
    <PackageTags>bytes</PackageTags>
    <PackageReleaseNotes>
**HUGE BREAKING CHANGE**:

By default `ByteSize` now assumes `1 KB == 1000 B` and `1 KiB == 1024 B` to
adhere to the IEC and NIST standards (https://en.wikipedia.org/wiki/Binary_prefix).
In the past `ByteSize` assumed `1 KB == 1024 B`, that means if you're upgrading
from v1, you'll see differences in values.

Other Breaking Changes:

- Renamed property `LargestWholeNumberSymbol` and `LargestWholeNumberValue` to `LargestWholeNumberDecimalSymbol` and `LargestWholeNumberDecimalValue` respectively.
- Drop support for all platforms _except_ `netstandard1.0` and `net45`.

New Features:

- Support for binary and decimal values (e.g. `ByteSize.FromKibiByte` and `ByteSize.FromKiloByte`).
- New constructor that takes a `long` value as the number of bits.
- Support for culture on Parse and TryParse

View all release notes at https://github.com/omar/ByteSize/releases.</PackageReleaseNotes>
    <PackageProjectUrl>https://github.com/omar/ByteSize</PackageProjectUrl>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/omar/ByteSize</RepositoryUrl>
    <NeutralLanguage>en</NeutralLanguage>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" PrivateAssets="All" Version="1.0.0" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All" Version="1.0.0" />
  </ItemGroup>

  <!-- Workaround for https://github.com/GitTools/GitVersion/issues/1031 -->
  <PropertyGroup Condition="'$(GitVersion_SemVer)' != ''">
    <GetVersion>false</GetVersion>
    <WriteVersionInfoToBuildLog>false</WriteVersionInfoToBuildLog>
    <UpdateAssemblyInfo>false</UpdateAssemblyInfo>

    <Version>$(GitVersion_FullSemVer)</Version>
    <VersionPrefix>$(GitVersion_MajorMinorPatch)</VersionPrefix>
    <VersionSuffix Condition="'$(UseFullSemVerForNuGet)' == 'false'">$(GitVersion_NuGetPreReleaseTag)</VersionSuffix>
    <VersionSuffix Condition="'$(UseFullSemVerForNuGet)' == 'true'">$(GitVersion_PreReleaseTag)</VersionSuffix>
    <PackageVersion Condition="'$(UseFullSemVerForNuGet)' == 'false'">$(GitVersion_NuGetVersion)</PackageVersion>
    <PackageVersion Condition="'$(UseFullSemVerForNuGet)' == 'true'">$(GitVersion_FullSemVer)</PackageVersion>
    <InformationalVersion Condition="'$(InformationalVersion)' == ''">$(GitVersion_InformationalVersion)</InformationalVersion>
    <AssemblyVersion Condition="'$(AssemblyVersion)' == ''">$(GitVersion_AssemblySemVer)</AssemblyVersion>
    <FileVersion Condition="'$(FileVersion)' == ''">$(GitVersion_AssemblySemFileVer)</FileVersion>
    <RepositoryBranch Condition="'$(RepositoryBranch)' == ''">$(GitVersion_BranchName)</RepositoryBranch>
    <RepositoryCommit Condition="'$(RepositoryCommit)' == ''">$(GitVersion_Sha)</RepositoryCommit>
  </PropertyGroup>
</Project>
